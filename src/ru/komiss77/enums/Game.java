package ru.komiss77.enums;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import ru.komiss77.Ostrov;
import ru.komiss77.objects.CaseInsensitiveMap;

// !!!!!!!  –Ω–µ —Å—Ç–∞–≤–∏—Ç—å –Ω–∏—á–µ–≥–æ –æ—Ç –±–∞–∫–∏—Ç–∞, –Ω–µ –≥—Ä—É–∑–∏—Ç –±–∞–Ω–∂–∏–∫!!!

public enum Game { 
        //—Å–ª–æ—Ç –≤ –º–µ–Ω—é —Å—Ç–∞—Ç—ã  : —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –º–µ–Ω—é —Ä–µ–∂–∏–º–æ–≤ : —Å–ª–æ—Ç –≤ –º–µ–Ω—é —Ä–µ–∂–∏–º–æ–≤
    GLOBAL  ("", 4, 0, 0, "", "", ServerType.NONE, "NAUTILUS_SHELL", "¬ße–û—Å—Ç—Ä–æ–≤", Arrays.asList(""),0, 0),
    
    LOBBY   ("¬ß6‚ò£1 ", 0, 0, 49, "–•–ê–ë", "lobby", ServerType.LOBBY, "HONEYCOMB", "¬ß6¬ßk0 ¬ße¬ßl–õ–æ–±–±–∏ ¬ß6¬ßk0", Arrays.asList(""), 0, -99),

    DA      ("¬ßa‚ùÇ ", 1, 0, 3, "–î–∞–∞—Ä–∏—è", "daaria", ServerType.ONE_GAME, "NETHERITE_SWORD", "¬ßa¬ßl–î–∞–∞—Ä–∏—è", Arrays.asList("¬ß–æ–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ", "¬ß–æ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã.", "¬ß–æ–¢–æ—Ä–≥–æ–≤–ª—è, —Ä–∞–±–æ—Ç—ã, –ø—Ä–∏–≤–∞—Ç—ã, –∏ –¥—Ä.", "¬ße–ó–∞—Ö–æ–¥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏!"), 0, -99),
    SE      ("¬ß4‚ò† ", 2, 0, 15, "–°–µ–¥–Ω–∞", "sedna_wastes", ServerType.ONE_GAME, "CRIMSON_NYLIUM", "¬ß4¬ßl–°–µ–¥–Ω–∞", Arrays.asList("¬ßc–•–∞—Ä–¥–∫–æ—Ä–Ω—ã–π —Ä–µ–∂–∏–º —Å –Ω–æ–≤—ã–º–∏", "¬ßc—Å–∫–∏–ª–ª–∞–º–∏, –º–∏—Ä–∞–º–∏, –º–æ–±–∞–º–∏,", "¬ßc–∫—Ä–∞—Ñ—Ç–∞–º–∏, –∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∞–º–∏.", "¬ße–£–Ω–∏—á—Ç–æ–∂–∞–π –º–µ—Å—Ç–Ω—É—é —Ñ–∞—É–Ω—É!", " ", "¬ß4¬ßn–ù–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤. [–ë–µ—Ç–∞ –¢–µ—Å—Ç]"), 0, -99),
    AR      ("¬ßa‚ò∫ ", 3, 0, 11, "–ê—Ä–∫–∞–∏–º", "arcaim", ServerType.ONE_GAME, "DIAMOND_PICKAXE", "¬ße¬ßl–ê—Ä–∫–∞–∏–º", Arrays.asList("¬ß–±–û—Ç–¥–æ—Ö–Ω–∏, —Ä–∞—Å—Å–ª–∞–±—å—Å—è, –ø–æ—Å—Ç—Ä–æ–π", "¬ß–±—á—Ç–æ –¥—É—à–∞ –ø–æ–∂–µ–ª–∞–µ—Ç. –•–∞–ª—è–≤–Ω—ã–π", "¬ß–±–∫—Ä–µ–∞—Ç–∏–≤ –¥–ª—è –≤—Å–µ—Ö!", "¬ße–ó–∞–ø—Ä–∏–≤–∞—Ç—å –∏ –æ–±—É—Å—Ç—Ä–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é!"), 0, -99),
    MI      ("¬ß5‚ú† ", 4, 0, 0, "–ú–∏–¥–≥–∞—Ä–¥", "midgard", ServerType.ONE_GAME, "SCULK_SHRIEKER", "¬ßd¬ßl–ú–∏–¥–≥–∞—Ä–¥", Arrays.asList("¬ß—Ñ–ë–∞–Ω–¥—ã, –æ—Ä—É–∂–∏–µ, —Ä–∞–±–æ—Ç—ã, –∏", "¬ß—Ñ–º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –∂–¥–µ—Ç —Ç–µ–±—è.", "¬ße–ù–æ–≤—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –†–ü —Ä–µ–∂–∏–º!", " ", "¬ß–∫¬ßn[–í –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ]"), 0, -99),
    SK      ("¬ßf‚òØ ", 5, 0, 5, "–°–∫–∞–π-–í–æ—Ä–ª–¥", "skyworld", ServerType.ONE_GAME, "FLOWERING_AZALEA", "¬ßb¬ßl–û—Å—Ç—Ä–æ–≤–∞", Arrays.asList("¬ß–Ω–ù–∞—á–Ω–∏ –∂–∏–∑–Ω—å –Ω–∞ –∫—Ä–æ—Ö–æ—Ç–Ω–æ–º", "¬ß–Ω–æ—Å—Ç—Ä–æ–≤–∫–µ, –¥–æ–±—ã–≤–∞–π —Ä–µ—Å—É—Ä—Å—ã,", "¬ß–Ω–∏ –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è.", "¬ße–ü–æ—Å—Ç—Ä–æ–π —Å–≤–æ—é –∏–º–ø–µ—Ä–∏—é —Å –Ω—É–ª—è!"), 0, -99),
    OB      ("¬ßb‚óà ", 6, 0, 29, "–í–∞–Ω-–ë–ª–æ–∫", "oneblock", ServerType.ONE_GAME, "AZALEA", "¬ßbOneBlock", Arrays.asList("¬ß–Ω–ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –≤—ã–∂–∏–≤–∞–Ω–∏–µ –Ω–∞", "¬ß–Ω–æ–¥–Ω–æ–º –±–ª–æ–∫–µ –≤ –ø—É—Å—Ç–æ—Ç–µ,", "¬ß–Ω—Ä–∞—Å—à–∏—Ä—è—è –≥—Ä–∞–Ω–∏—Ü—ã –∑–∞ –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ", "¬ß–Ω—Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∞–∑.", "¬ße–ü–æ—Å—Ç—Ä–æ–π —Å–≤–æ—é –∏–º–ø–µ—Ä–∏—é —Å –Ω—É–ª—è!"), 0, -77),
    SD      ("¬ßf‚úú ", 7, 0, 39, "–°–∫–∞–π-–ì—Ä–∏–¥", "skygrid", ServerType.ONE_GAME, "SPAWNER", "¬ßbSkyGrid", Arrays.asList("¬ß–Ω–í—ã–∂–∏–≤–∏ –≤ –±—Ä—É—Ç–∞–ª—å–Ω–æ–π —Å–µ—Ç–∫–µ", "¬ß–Ω–±–ª–æ–∫–æ–≤, —Å–æ–±–µ—Ä–∏ –≤—Å—ë, —á—Ç–æ–±—ã", "¬ß–Ω–ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤–æ–∫", "¬ß–Ω–∏ –ø—Ä–æ–π—Ç–∏ –∏–≥—Ä—É.", "¬ße–ü–æ—Å—Ç—Ä–æ–π —Å–≤–æ—é –∏–º–ø–µ—Ä–∏—é —Å –Ω—É–ª—è!"), 0, -77),
    PA      ("¬ß5‚ùñ ", 8, 0, 33, "–ü–∞—Ä–∫—É—Ä—ã", "parkur", ServerType.ONE_GAME, "FEATHER", "¬ßb¬ßl–ü–∞—Ä–∫—É—Ä—ã", Arrays.asList("¬ß–º–û—Ç—Ç–æ—á–∏ —Å–≤–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø–∞—Ä–∫—É—Ä–∞", "¬ß–º–Ω–∞ –Ω–∞—à–µ–º –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º —Ä–µ–∂–∏–º–µ", "¬ß–º—Å 60+ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ä—Ç.", "¬ße–ü–æ—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π —Å–≤–æ–µ –ø—Ä–æ–≤–æ—Ä—Å—Ç–≤–æ!"), 0, -77),
    EN      ("E", 7, 0, 0, "–≠–Ω–∏–≥–º–∞", "enigma", ServerType.ONE_GAME, "END_PORTAL_FRAME", "¬ßd¬ßl–≠–Ω–∏–≥–º–∞", Arrays.asList("¬ß5–°–µ—Ä–≤–µ—Ä —Ç–∞–π–Ω –∏ –∑–∞–≥–∞–¥–æ–∫"), 0, -77),
    FA      ("¬ß5ü§ì ", 9, 0, 41, "–§–∞—Ç—Ç–∞", "fatta", ServerType.ONE_GAME, "LECTERN", "¬ß—Ñ¬ßl–§–∞—Ç—Ç–∞", Arrays.asList("¬ß—Ñ–ë–∞–Ω–¥—ã, –æ—Ä—É–∂–∏–µ, —Ä–∞–±–æ—Ç—ã, –∏", "¬ß—Ñ–º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –∂–¥–µ—Ç —Ç–µ–±—è.", "¬ße–ù–æ–≤—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –†–ü —Ä–µ–∂–∏–º!", " ", "¬ß–∫¬ßn[–í –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ]"), 0, -99),
    
    BW      ("¬ße‚ò¢ ", 18, 1, 10, "–±–µ–¥–≤–∞—Ä—Å", "bw01", ServerType.ARENAS, "RED_BED", "¬ße¬ßl–ë–µ–¥–í–∞—Ä—Å", Arrays.asList(""), 0, -77),
    SG      ("¬ßc‚ò† ", 19, 1, 25, "–≥–æ–ª–æ–¥–Ω—ã–µ", "sg01", ServerType.ARENAS, "GOLDEN_APPLE", "¬ß4¬ßl–ì–æ–ª–æ–¥–Ω—ã–µ –ò–≥—Ä—ã", Arrays.asList(""), 0, -77),
    SW      ("¬ßb“à ", 20, 1, 2, "—Å–∫–∞–π–≤–∞—Ä—Å", "sw01", ServerType.ARENAS, "COMPASS", "¬ß5¬ßl–°–∫–∞–π–í–∞—Ä—Å", Arrays.asList(""), 0, -77),
    ZH      ("¬ß4‚öö ", 21, 1, 6, "–∑–æ–º–±–∏", "zh01", ServerType.ARENAS, "ROTTEN_FLESH", "¬ßc¬ßl–ó–æ–º–±–∏", Arrays.asList(""), 0, -77),
    KB      ("¬ßc‚öî ", 22, 1, 5, "–∫–∏—Ç–ø–≤–ø", "kb01", ServerType.ARENAS, "DIAMOND_CHESTPLATE", "¬ßb¬ßl–ö–∏—Ç-–ü–í–ü", Arrays.asList(""), 0, -77),
    GR      ("¬ß6$ ", 23, 1, 16, "–ª–∏—Ö–æ—Ä–∞–¥–∫–∞", "gr01", ServerType.ARENAS, "RAW_GOLD", "¬ß6¬ßl–ó–æ–ª–æ—Ç–∞—è –õ–∏—Ö–æ—Ä–∞–¥–∫–∞", Arrays.asList(""), 0, -77),
    WZ      ("¬ß3‚öí ", 24, 1, 3, "–ø–æ–ª–µ-–±—Ä–∞–Ω–∏", "wz01", ServerType.ARENAS, "TOTEM_OF_UNDYING", "¬ßb¬ßl–ü–æ–ª–µ –ë—Ä–∞–Ω–∏", Arrays.asList(""), 0, -77), //warzone
    BB      ("¬ß3‚úç ", 25, 1, 33, "–±–∏–ª–¥–±–∞—Ç–ª", "bb01", ServerType.ARENAS, "GOLDEN_PICKAXE", "¬ßa¬ßl–ë–∏—Ç–≤–∞ –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π", Arrays.asList(""), 0, -77),
    //21 - –ø—É—Å—Ç–æ
    TW      ("¬ße‚ñ¶ ", 27, 1, 30, "—Ç–≤–∏—Å—Ç", "mg01", ServerType.ARENAS, "MUSIC_DISC_RELIC", "¬ßd¬ßl–¢–≤–∏—Å—Ç", Arrays.asList(""), 0, -77),
    SN      ("¬ß6‡≤ä ", 28, 1, 32, "–∑–º–µ–π–∫–∞", "mg01", ServerType.ARENAS, "STRING", "¬ßf¬ßl–ó–º–µ–π–∫–∞", Arrays.asList(""), 0, -77),
    CS      ("¬ß3‚ú° ", 29, 1, 19, "–∫–æ–Ω—Ç—Ä–∞", "cs01", ServerType.ARENAS, "FLINT_AND_STEEL", "¬ß5¬ßl–ö–æ–Ω—Ç—Ä–∞", Arrays.asList(""), 0, -77),
    HS      ("¬ßa€© ", 30, 1, 13, "–ø—Ä—è—Ç–∫–∏", "hs01", ServerType.ARENAS, "JACK_O_LANTERN", "¬ß3¬ßl–ü—Ä—è—Ç–∫–∏", Arrays.asList(""), 0, -77),
    QU      ("¬ß4‚öõ ", 31, 1, 29, "–∫–≤—ç–π–∫", "qu01", ServerType.ARENAS, "TRIDENT", "¬ßc¬ßl–ö–≤—ç–π–∫", Arrays.asList(""), 0, -77),
    
    ;

    
    
    public static String getGamePageTitle(final int page) {
        return switch (page) {
            case 0 -> "¬ßb–ë–æ–ª—å—à–∏–µ";
            case 1 -> "¬ße–ú–∏–Ω–∏-–ò–≥—Ä—ã";
            default -> "–†–µ–∂–∏–º—ã";
        };
    }


    
    
    public final String defaultlogo;
    public final int statSlot;
    public final int menuPage;
    public final int menuSlot;
    public final String suggestName;
    public final String serverName;
    public final ServerType type;
    public final String mat;
    public final String displayName;
    public final List<String> description;
    public static int MAX_SLOT;
    public final int level;
    public final int reputation;

    private static final CaseInsensitiveMap<Game> nameMap; //–Ω–∞–ø–∏—Ö–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    
    
    Game(final String defaultlogo, final int statSlot, final int menuPage, final int menuSlot, final String suggestName, final String serverName, final ServerType type, final String mat, final String displayName, final List<String> description, final int level, final int reputation){
        this.defaultlogo = defaultlogo;
        this.statSlot = statSlot;
        this.menuPage = menuPage;
        this.menuSlot = menuSlot;
        this.suggestName = suggestName;
        this.serverName = serverName;
        this.type = type;
        this.mat = mat;
        this.displayName = displayName;
        this.description = description;
        this.level = level;
        this.reputation = reputation;
    }
    
    static {
        nameMap = new CaseInsensitiveMap<>();

        for (Game game : Game.values()) {
          if (game==GLOBAL) continue;
          if ( 36 * game.menuPage + game.menuSlot>MAX_SLOT) {
              MAX_SLOT = 36 * game.menuPage + game.menuSlot;
          }
          nameMap.put(game.name(), game); //lobby da pa bw bb sg
          nameMap.put(game.suggestName, game);
          nameMap.put(game.serverName, game);
        }

        nameMap.put("—Ö–∞–±", LOBBY);
        nameMap.put("–ª–æ–±–±–∏", LOBBY);
        nameMap.put("hub", LOBBY);
        nameMap.put("lobby", LOBBY);
        nameMap.put("lobby0", LOBBY);
        nameMap.put("lobby1", LOBBY);
        nameMap.put("lobby2", LOBBY);
        nameMap.put("lobby3", LOBBY);
        nameMap.put("lobby4", LOBBY);
        nameMap.put("skyblock", SK); //—Ñ–∏–∫—Å-–ø–æ—Ä—Ç–∞–ª –≤ –ª–æ–±–±–∏ –æ—Ç–ø—Ä–∞–ª—è–µ—Ç –Ω–∞ skyblock

    }
    
    //park skyblock –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–æ
    public static Game fromServerName(String serverName) { //araim daaria bw01 bb01 sg02
        if (serverName==null || serverName.isEmpty()) return GLOBAL;
        
        //–ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫
        Game game = nameMap.get(serverName);
//Ostrov.log_warn("1 serverName="+serverName+" game="+game);
        if (game!=null) return game;
        
        //–Ω–µ –ø–æ–ª—É—á–∏–ª—Å—è –ø—Ä—è–º–æ–π - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏
        //serverName = serverName.toLowerCase();
        if (serverName.length()==4) { //bw01 bb01 sg02 –æ–±—Ä–µ–∑–∞—Ç—å –¥–æ bw bb sg
            serverName = serverName.substring(0, 2);
        }
        game = nameMap.get(serverName);
//Ostrov.log_warn("2 serverName="+serverName+" game="+game);
        if (game!=null) return game;
        
        if (serverName.startsWith("sedna_")) {
            return SE;
        }

        return GLOBAL; //rg0 ol0 ?
    }



}


