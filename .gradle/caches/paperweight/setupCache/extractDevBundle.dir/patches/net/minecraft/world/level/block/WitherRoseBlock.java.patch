--- a/net/minecraft/world/level/block/WitherRoseBlock.java
+++ b/net/minecraft/world/level/block/WitherRoseBlock.java
@@ -21,17 +21,18 @@
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class WitherRoseBlock extends FlowerBlock {
+
     public static final MapCodec<WitherRoseBlock> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
-        return instance.group(EFFECTS_FIELD.forGetter(FlowerBlock::getSuspiciousEffects), propertiesCodec()).apply(instance, WitherRoseBlock::new);
+        return instance.group(WitherRoseBlock.EFFECTS_FIELD.forGetter(FlowerBlock::getSuspiciousEffects), propertiesCodec()).apply(instance, WitherRoseBlock::new);
     });
 
     @Override
     public MapCodec<WitherRoseBlock> codec() {
-        return CODEC;
+        return WitherRoseBlock.CODEC;
     }
 
-    public WitherRoseBlock(MobEffect effect, int i, BlockBehaviour.Properties properties) {
-        this(makeEffectList(effect, i), properties);
+    public WitherRoseBlock(MobEffect effect, int i, BlockBehaviour.Properties blockbase_info) {
+        this(makeEffectList(effect, i), blockbase_info);
     }
 
     public WitherRoseBlock(List<SuspiciousEffectHolder.EffectEntry> stewEffects, BlockBehaviour.Properties settings) {
@@ -45,14 +46,14 @@
 
     @Override
     public void animateTick(BlockState state, Level world, BlockPos pos, RandomSource random) {
-        VoxelShape voxelShape = this.getShape(state, world, pos, CollisionContext.empty());
-        Vec3 vec3 = voxelShape.bounds().getCenter();
-        double d = (double)pos.getX() + vec3.x;
-        double e = (double)pos.getZ() + vec3.z;
+        VoxelShape voxelshape = this.getShape(state, world, pos, CollisionContext.empty());
+        Vec3 vec3d = voxelshape.bounds().getCenter();
+        double d0 = (double) pos.getX() + vec3d.x;
+        double d1 = (double) pos.getZ() + vec3d.z;
 
-        for(int i = 0; i < 3; ++i) {
+        for (int i = 0; i < 3; ++i) {
             if (random.nextBoolean()) {
-                world.addParticle(ParticleTypes.SMOKE, d + random.nextDouble() / 5.0D, (double)pos.getY() + (0.5D - random.nextDouble()), e + random.nextDouble() / 5.0D, 0.0D, 0.0D, 0.0D);
+                world.addParticle(ParticleTypes.SMOKE, d0 + random.nextDouble() / 5.0D, (double) pos.getY() + (0.5D - random.nextDouble()), d1 + random.nextDouble() / 5.0D, 0.0D, 0.0D, 0.0D);
             }
         }
 
@@ -60,11 +61,13 @@
 
     @Override
     public void entityInside(BlockState state, Level world, BlockPos pos, Entity entity) {
+        if (!new io.papermc.paper.event.entity.EntityInsideBlockEvent(entity.getBukkitEntity(), org.bukkit.craftbukkit.v1_20_R3.block.CraftBlock.at(world, pos)).callEvent()) { return; } // Paper - Add EntityInsideBlockEvent
         if (!world.isClientSide && world.getDifficulty() != Difficulty.PEACEFUL) {
             if (entity instanceof LivingEntity) {
-                LivingEntity livingEntity = (LivingEntity)entity;
-                if (!livingEntity.isInvulnerableTo(world.damageSources().wither())) {
-                    livingEntity.addEffect(new MobEffectInstance(MobEffects.WITHER, 40));
+                LivingEntity entityliving = (LivingEntity) entity;
+
+                if (!entityliving.isInvulnerableTo(world.damageSources().wither())) {
+                    entityliving.addEffect(new MobEffectInstance(MobEffects.WITHER, 40), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.WITHER_ROSE); // CraftBukkit
                 }
             }
 
